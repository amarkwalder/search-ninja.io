org: searchninja
app: search-ninja-io
service: search-ninja-backend-auth

plugins:
    - serverless-plugin-typescript
    - serverless-dotenv-plugin
    - serverless-deployment-bucket
    - serverless-s3-remover
    - serverless-domain-manager
    - serverless-offline
    - serverless-plugin-monorepo

provider:
    name: aws
    #    stage: ${env:STAGE}
    cfnRole: ${env:CFN_ROLE}
    runtime: nodejs12.x
    profile: ${env:AWS_PROFILE}
    stackName: search-ninja-backend-auth-${env:STAGE}
    deploymentBucket:
        name: search-ninja-backend-auth-deployment-bucket-${env:STAGE}
    logs:
        httpApi: true
    httpApi:
        name: search-ninja-backend-auth-${env:STAGE}
        cors:
            allowedOrigins:
                - http://localhost:3000
            allowCredentials: true
        authorizers:
            search-ninja-authorizer:
                identitySource: $request.header.Authorization
                issuerUrl: ${env:AUTH0_ISSUER_URL}
                audience: ${env:AUTH0_AUDIENCE}

custom:
    dotenv:
        basePath: ../config/
    serverless-offline:
        noAuth: true
        noPrependStageInUrl: true
        httpPort: 4000
        lambdaPort: 4002
    remover:
        buckets:
            - ${self:provider.deploymentBucket.name}
    customDomain:
        apiType: http
        endpointType: regional
        domainName: ${env:DOMAIN_NAME}
        certificateName: ${env:CERTIFICATE_NAME}
        basePath: ${env:BASE_PATH}
        createRoute53Record: true

functions:
    main:
        handler: src/main.handler
        layers:
            - ${cf:search-ninja-backend-nestjs-layer-${env:STAGE}.SearchNinjaBackendNestJSLayer}
        events:
            - httpApi:
                  method: 'OPTIONS'
                  path: '/{proxy+}'

            - httpApi: 'GET /api'
            - httpApi: 'GET /api/{proxy+}'
            - httpApi: 'GET /health'
            - httpApi: 'GET /health/{proxy+}'

            - httpApi:
                  method: 'GET'
                  path: '/{proxy+}'
                  authorizer:
                      name: search-ninja-authorizer

            - httpApi:
                  method: 'POST'
                  path: '/{proxy+}'
                  authorizer:
                      name: search-ninja-authorizer

            - httpApi:
                  method: 'PUT'
                  path: '/{proxy+}'
                  authorizer:
                      name: search-ninja-authorizer

            - httpApi:
                  method: 'PATCH'
                  path: '/{proxy+}'
                  authorizer:
                      name: search-ninja-authorizer

            - httpApi:
                  method: 'DELETE'
                  path: '/{proxy+}'
                  authorizer:
                      name: search-ninja-authorizer
